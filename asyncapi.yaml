asyncapi: 2.3.0
id: https://github.com/omnipotentuser/phraze
defaultContentType: application/json
info:
  title: Phraze
  version: 0.1.0
  description: >-
    Phraze implements AI for telephony and enabled signaling to clients to grant both way communication between deaf and hearing users

    use cases: 
      1. Interpreter available to take call
        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze pops interpreter out of waiting queue into room
        phraze sends invite to interpreter
        phraze sends ivr update status to patron
        interpreter responds with invite accepted
        phraze sends ivr update status to patron
        patron receives the status update, (may allow customer to manually allow app to begin sending sdp)
        patron sends sdp to server, etc

      2. Interpreter busy
        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze gets no agent available
        phraze sends IVR update status 'busy' to patron
        interpreter becomes available, goes into waiting queue
        phraze gets event that interpreter is available
        phraze pops interpreter from waiting queue into room
        phraze sends invite to interpreter
        phraze sends ivr update status to patron 'interpreter received request'
        interpreter responds with invite accepted
        phraze sends ivr update status to patron
        patron receives the status update, (may allow customer to manually allow app to begin sending sdp)
        patron sends sdp to server, etc

      3. Interpreter none available
        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze gets no agent available
        phraze checks if any agent is online, but none available
        phraze sends IVR update status 'none_avail' to patron
        interpreter comes online, is available, goes into waiting queue
        phraze gets event that interpreter is available
        phraze pops interpreter from waiting queue into room
        phraze sends invite to interpreter
        phraze sends ivr update status to patron 'interpreter received request'
        interpreter responds with invite accepted
        phraze sends ivr update status to patron
        patron receives the status update, (may allow customer to manually allow app to begin sending sdp)
        patron sends sdp to server, etc

      4. Interpreter Rejects
        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze sends invite to interpreter
        phraze sends ivr update status to patron
        interpreter responds with reject
        phraze puts interpreter into timeout room
        phraze seeks next interpreter in queue
        phraze pops interpreter out of waiting queue into room
        phraze sends invite to interpreter
        phraze sends ivr update status to patron
        interpreter responds with invite accepted
        phraze sends ivr update status to patron
        patron receives the status update, (may allow customer to manually allow app to begin sending sdp)
        patron sends sdp to server, etc

      5. Interpreter Misses
        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze sends invite to interpreter
        phraze sends ivr update status to patron
        interpreter times out with no response
        phraze puts interpreter into timeout room
        phraze seeks next interpreter in queue
        phraze pops interpreter out of waiting queue into room
        phraze sends invite to interpreter
        phraze sends ivr update status to patron
        interpreter responds with invite accepted
        phraze sends ivr update status to patron
        patron receives the status update, (may allow customer to manually allow app to begin sending sdp)
        patron sends sdp to server, etc

      6. Patron cancels request
        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze pops interpreter out of waiting queue into room
        phraze sends invite to interpreter
        phraze sends ivr update status to patron
        patron sends cancel request to phraze
        phraze sends cancel to interpreter
        phraze places interpreter in end of waiting queue

      7. Patron canels request after interpreter accepts invite
        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze pops interpreter out of waiting queue into room
        phraze sends invite to interpreter
        interpreter accepts invite
        phraze sends ivr update status to patron interpreter is ready
        patron sends cancel request to phraze
        phraze ssends hangup with status 'patron cancel request'
        phraze places interpreter in end of waiting queue

      Patron hangs up during session
        patron sends hangup
        phraze sends hangup command to interpreter
        phraze places interpreter in end of waiting queue

      Interpreter hangs up during session
        interpreter sends hangup
        phraze sends hangup command to patron
        phraze places interpreter in end of waiting queue

  license:
    name: MIT
servers:
  development:
    url: dev.phraze.com
    protocol: wss
    description: >-
      Development Server that provides unauthenticated connection for
      development purposes
channels:
  /:
    publish:
      summary: Send data to the server using Phoenix channels library
      message:
        oneOf:
          - $ref: '#/components/messages/join'
          - $ref: '#/components/messages/sdk'
          - $ref: '#/components/messages/candidate'
          - $ref: '#/components/messages/hangup'
    subscribe:
      summary: Receive data from the server using Phoenix channels library
      message:
        oneOf:
          - $ref: '#/components/messages/create_offer'
          - $ref: '#/components/messages/sdk'
          - $ref: '#/components/messages/candidate'
          - $ref: '#/components/messages/ice_servers'
          - $ref: '#/components/messages/hangup'
components:
  messages:
    join:
      description: Begins a call to remote peer through various mechanisms depending on the service
      x-response:
        oneOf:
          - $ref: '#/components/schemas/ok'
          - $ref: '#/components/schemas/error'
          - $ref: '#/components/schemas/timeout'
    sdk:
      description: Respond to an incoming call by accepting the invitation to join the call session. The local peer then becomes part of a group of peers belonging to the session and can exchange messages to each other.
      payload:
        $ref: '#/components/schemas/offer_sdk'
      x-response:
        oneOf:
          - $ref: '#/components/schemas/ok'
          - $ref: '#/components/schemas/error'
          - $ref: '#/components/schemas/timeout'
    candidate:
      description: Server sends a list of uri's consisting of STUN and TURN servers for the peer to insert for ICE
      payload:
        $ref: '#/components/schemas/candidate'
      x-response:
        oneOf:
          - $ref: '#/components/schemas/ok'
          - $ref: '#/components/schemas/error'
          - $ref: '#/components/schemas/timeout'
    hangup:
      description: Server sends a list of uri's consisting of STUN and TURN servers for the peer to insert for ICE
      x-response:
        oneOf:
          - $ref: '#/components/schemas/ok'
          - $ref: '#/components/schemas/error'
          - $ref: '#/components/schemas/timeout'
    offer:
      description: Notification that the peers received the request and is ringing from their end
    ice_servers:
      summary: Ringing timeout expired. Server informs the peers that the call is ended.
      payload:
        $ref: '#/components/schemas/ice_servers'
  schemas:
    sdk:
      type: object
      description: >-
        Receive event with empty payload to confirm the client that the call is
        being processed
      properties:
        type:
          $ref: '#/components/schemas/type'
        sdp:
          $ref: '#/components/schemas/sdp'
    candidate:
      type: string
      description: >-
        A possible network address for candidacy of connection from outside.
        Gets sent to all other agents in the room
    ice_servers:
      type: object
      properties:
        ice_servers:
          type: array
          description: List of URLs
          externalDocs:
            description: Find more info on WebRTC using STUN/TURN servers
            url: 'https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Signaling_and_video_calling'
          items:
            type: object
            description: >-
              map of list of urls with server application of either of stun turn
              server and of username and credentials if the key is turn
            properties:
              urls:
                $ref: '#/components/schemas/urls'
              username:
                default:
                $ref: '#/components/schemas/username'
              credential:
                default:
                $ref: '#/components/schemas/credential'
    urls:
      type: array
      description: Collection of urls in a list
      items:
        type: string
        description: >-
          Format of each server address starts with server type, url,
          port and optional transport type
        pattern: '[stun|turn]:<url>:[1-9]+[\d]*\?transport=[udp|tcp]'
        examples:
          - payload: null
            pattern: turn:stun.bedrock.dev.convorelay.com:443?transport=udp
          - payload: null
            pattern: stun:stun.bedrock.convorelay.com:5349
    username:
      type: string
      description: >-
        Username in conjunction to the credential to authenticate
        access to the TURN server
    credential:
      type: string
      description: Password to authenticate the TURN server access
    trickle:
      type: object
      properties:
        peerid:
          $ref: '#/components/schemas/peerid'
        candidate:
          $ref: '#/components/schemas/candidate'
    type:
      type: string
      description: >-
        The type of SDP format
      enum:
      - offer
      - answer
    sdp:
      type: string
      description: >-
        Information holding the description of the agent pertaining to its
        network, encryption, and media codecs
    peerid:
      type: string
      description: >-
        A unique id normally UUID to identify a remote peer
    ok:
      type: string
      description: response message with success from server
    error:
      type: string
      description: response message with error from server
    timeout:
      description: response timeout with failed attempt to send data
