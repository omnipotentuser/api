asyncapi: 2.1.0
id: https://github.com/omnipotentuser/phraze
defaultContentType: application/json
info:
  title: Phraze
  version: 0.1.4
  description: |
    Phraze implements AI for telephony and enabled signaling to clients to grant both way communication between deaf and hearing users

    use cases: 
      1. Interpreter available to take call

        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze pops interpreter out of waiting queue into room
        phraze sends invite to interpreter
        phraze sends ivr update status to patron
        interpreter responds with invite accepted
        phraze sends ivr update status to patron
        patron receives the status update, (may allow customer to manually allow app to begin sending sdp)
        patron sends sdp to server, etc

      2. Interpreter busy

        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze gets no agent available
        phraze sends IVR update status 'busy' to patron
        interpreter becomes available, goes into waiting queue
        phraze gets event that interpreter is available
        phraze pops interpreter from waiting queue into room
        phraze sends invite to interpreter
        phraze sends ivr update status to patron 'interpreter received request'
        interpreter responds with invite accepted
        phraze sends ivr update status to patron
        patron receives the status update, (may allow customer to manually allow app to begin sending sdp)
        patron sends sdp to server, etc


      3. Interpreter none available during business hours

        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze gets no agent available
        phraze checks if any agent is online, but none available
        phraze sends IVR update status 'none_avail' to patron
        interpreter comes online, is available, goes into waiting queue
        phraze gets event that interpreter is available
        phraze pops interpreter from waiting queue into room
        phraze sends invite to interpreter
        phraze sends ivr update status to patron 'interpreter received request'
        interpreter responds with invite accepted
        phraze sends ivr update status to patron
        patron receives the status update, (may allow customer to manually allow app to begin sending sdp)
        patron sends sdp to server, etc

      4. Interpreter Rejects

        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze sends invite to interpreter
        phraze sends ivr update status to patron
        interpreter responds with reject
        phraze puts interpreter into timeout room
        phraze seeks next interpreter in queue
        phraze pops interpreter out of waiting queue into room
        phraze sends invite to interpreter
        interpreter responds with invite accepted
        phraze sends ivr update status to patron
        patron receives the status update, (may allow customer to manually allow app to begin sending sdp)
        patron sends sdp to server, etc


      5. Interpreter Misses

        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze sends invite to interpreter
        phraze sends ivr update status to patron
        interpreter times out with no response
        phraze puts interpreter into timeout room
        phraze seeks next interpreter in queue
        phraze pops interpreter out of waiting queue into room
        phraze sends invite to interpreter
        phraze sends ivr update status to patron
        interpreter responds with invite accepted
        phraze sends ivr update status to patron
        patron receives the status update, (may allow customer to manually allow app to begin sending sdp)
        patron sends sdp to server, etc

      6. Patron cancels request

        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze pops interpreter out of waiting queue into room
        phraze sends invite to interpreter
        phraze sends ivr update status to patron
        patron sends cancel request to phraze
        phraze sends cancel to interpreter
        phraze places interpreter in end of waiting queue

      7. Patron canels request after interpreter accepts invite

        phraze puts patron into a hold queue
        phraze seeks next interpreter in queue
        phraze pops interpreter out of waiting queue into room
        phraze sends invite to interpreter
        interpreter accepts invite
        phraze sends ivr update status to patron interpreter is ready
        patron sends cancel request to phraze
        phraze ssends hangup with status 'patron cancel request'
        phraze places interpreter in end of waiting queue

      8. Off hours

        phraze checks hours policy (preliminary checks)
        phraze sends ivr update status to patron

      9.  Patron hangs up during session

        patron sends hangup
        phraze sends hangup command to interpreter
        phraze places interpreter in end of waiting queue


      10. Interpreter hangs up during session

        interpreter sends hangup
        phraze sends hangup command to patron
        phraze places interpreter in end of waiting queue


  license:
    name: MIT
servers:
  development:
    url: bovav.com:1337
    protocol: wss
    description: >-
      Development Server that provides unauthenticated connection for
      development purposes
channels:
  /ws/signaler:
    publish:
      message:
        oneOf:
          - $ref: '#/components/messages/join'
          - $ref: '#/components/messages/sdp_info'
          - $ref: '#/components/messages/ice_candidate'
          - $ref: '#/components/messages/accept'
          - $ref: '#/components/messages/reject'
          - $ref: '#/components/messages/miss'
          - $ref: '#/components/messages/hangup'
    subscribe:
      message:
        oneOf:
          - $ref: '#/components/messages/sdp_info'
          - $ref: '#/components/messages/invite'
          - $ref: '#/components/messages/ice_candidate'
          - $ref: '#/components/messages/ice_config'
          - $ref: '#/components/messages/accept'
          - $ref: '#/components/messages/reject'
          - $ref: '#/components/messages/miss'
          - $ref: '#/components/messages/status'
          - $ref: '#/components/messages/hangup'
components:
  messages:
    join:
      payload:
        $ref: '#/components/schemas/join'
      x-response:
        oneOf:
          - $ref: '#/components/schemas/ok'
          - $ref: '#/components/schemas/error'
          - $ref: '#/components/schemas/timeout'
    sdp_info:
      description: >-
        Respond to an incoming call by accepting the invitation to join the call session.
        The local peer then becomes part of a group of peers belonging to the session
        and can exchange messages to each other.
      payload:
        $ref: '#/components/schemas/sdp_info'
      x-response:
        oneOf:
          - $ref: '#/components/schemas/ok'
          - $ref: '#/components/schemas/error'
          - $ref: '#/components/schemas/timeout'
    ice_candidate:
      externalDocs:
        url: https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate
        description: >-
          Server sends a list of uri's consisting of STUN and TURN servers for the peer to insert for ICE
      payload:
        $ref: '#/components/schemas/ice_candidate'
      x-response:
        oneOf:
          - $ref: '#/components/schemas/ok'
          - $ref: '#/components/schemas/error'
          - $ref: '#/components/schemas/timeout'
    ice_config:
      summary: List of urls for stun and turn servers.
      payload:
        type: object
        properties:
          ice_servers:
            type: array
            description: List of URLs
            externalDocs:
              description: Find more info on WebRTC using STUN/TURN servers
              url: 'https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Signaling_and_video_calling'
            items:
              type: object
              description: >-
                map of list of urls with server application of either of stun turn
                server and of username and credentials if the key is turn
              properties:
                urls:
                  $ref: '#/components/schemas/urls'
                username:
                  default:
                  $ref: '#/components/schemas/username'
                credential:
                  default:
                  $ref: '#/components/schemas/credential'
    status:
      summary: Server sends status update such as interpreter accepted invite, etc.
      payload:
        $ref: '#/components/schemas/status'
    invite:
      summary: Sends an invite to an interpreter
      payload:
        type: object
        description: >-
          Receive event with empty payload to confirm the client that the call is
          being processed
        properties:
          local_agent:
            $ref: '#/components/schemas/peer_id'
    accept:
      summary: Accept invite from remote peer. Server handles the accept message and sends to others based on the destination peer.
      payload:
        $ref: '#/components/schemas/accept'
      x-response:
        oneOf:
          - $ref: '#/components/schemas/ok'
          - $ref: '#/components/schemas/error'
          - $ref: '#/components/schemas/timeout'
    reject:
      summary: Reject invite from remote peer. Server handles the reject message and sends to others based on the destination peer.
      payload:
        $ref: '#/components/schemas/reject'
      x-response:
        oneOf:
          - $ref: '#/components/schemas/ok'
          - $ref: '#/components/schemas/error'
          - $ref: '#/components/schemas/timeout'
    miss:
      summary: Miss invite from remote peer. Server handles the miss message and sends to others based on the destination peer.
      payload:
        $ref: '#/components/schemas/miss'
      x-response:
        oneOf:
          - $ref: '#/components/schemas/ok'
          - $ref: '#/components/schemas/error'
          - $ref: '#/components/schemas/timeout'
    hangup:
      description: Server sends a list of uri's consisting of STUN and TURN servers for the peer to insert for ICE
      x-response:
        oneOf:
          - $ref: '#/components/schemas/ok'
          - $ref: '#/components/schemas/error'
          - $ref: '#/components/schemas/timeout'
  schemas:
    join:
      type: object
      description: >-
        Describe the agent joining the session. A unique id which is created post-login to uniquely 
        identify the user among multiple logins. The type of action declares what kind of action is to be 
        done when joining the session. For an interpreter UA no action needs to be done.
      properties:
        user_agent:
          $ref: '#/components/schemas/user_agent'
        action:
          $ref: '#/components/schemas/action'
        agent_uuid:
          $ref: '#/components/schemas/peer_id'
    sdp_info:
      type: object
      description: >-
        Receive event with empty payload to confirm the client that the call is
        being processed
      properties:
        type:
          $ref: '#/components/schemas/type'
        sdp:
          $ref: '#/components/schemas/sdp'
    ice_candidate:
      type: object
      description: >-
        A possible network address for candidacy of connection from outside.
        Gets sent to all other agents in the room
      properties:
        peer_id:
          $ref: '#/components/schemas/peer_id'
        candidate:
          $ref: '#/components/schemas/candidate'
        sdpMid:
          $ref: '#/components/schemas/sdp_mid'
        sdpMLineIndex:
          $ref: '#/components/schemas/sdp_mline_index'
        usernameFragment:
          $ref: '#/components/schemas/username_fragment'
    user_agent:
      properties:
        user_type:
          type: string
          description: The type of user agent
          enum:
          - patron
          - vri_interpreter
          - vrs_interpreter
          - rtt_interpreter
          - bot
    action:
      properties:
        session_type:
          type: string
          description: The type of session to invoke
          enum:
          - p2p
          - vri
          - vrs
          - rtt
          - idle
    status:
      properties:
        session_type:
          type: string
          description: The type of session to invoke
          enum:
          - invite_answered
            busy
            closed
            error
            pool_empty
            unknown
        message:
          type: string
          description: Information string of the status
    urls:
      type: array
      description: Collection of urls in a list
      items:
        type: string
        description: >-
          Format of each server address starts with server type, url,
          port and optional transport type
        pattern: '[stun|turn]:<url>:[1-9]+[\d]*\?transport=[udp|tcp]'
        examples:
          - payload: null
            pattern: turn:stun.bedrock.dev.convorelay.com:443?transport=udp
          - payload: null
            pattern: stun:stun.bedrock.convorelay.com:5349
    username:
      type: string
      description: >-
        Username in conjunction to the credential to authenticate
        access to the TURN server
    credential:
      type: string
      description: Password to authenticate the TURN server access
    accept:
      type: object
      properties:
        from_peer_id:
          type: string
          #ref: '#/components/schemas/peer_id'
        to_peer_id:
          type: string
          #ref: '#/components/schemas/peer_id'
    reject:
      type: object
      properties:
        from_peer_id:
          type: string
          #ref: '#/components/schemas/peer_id'
        to_peer_id:
          type: string
          #ref: '#/components/schemas/peer_id'
    miss:
      type: object
      properties:
        from_peer_id:
          type: string
          #ref: '#/components/schemas/peer_id'
        to_peer_id:
          type: string
          #ref: '#/components/schemas/peer_id'
    type:
      type: string
      description: >-
        The type of SDP format
      enum:
      - offer
      - answer
    sdp:
      type: string
      description: >-
        Information holding the description of the agent pertaining to its
        network, encryption, and media codecs
    candidate:
      type: string
      description: >-
        A DOMString describing the network connectivity information for the candidate.
        Additional information can be found in RTCIceCandidate.candidate.
    peer_id:
      type: string
      description: >-
        A unique id normally UUID to identify an unique peer.
              sdpMid:
            $ref: '#/components/schemas/sdpMid'
          sdpMLineIndex:
            $ref: '#/components/schemas/sdpMLineIndex'
          usernameFragment:
            $ref: '#/components/schemas/usernameFragment'
    sdp_mid:
      type: integer
      description: >-
        A DOMString specifying the candidate's media stream identification tag which uniquely
        identifies the media stream within the component with which the candidate is associated,
        or null if no such association exists
    sdp_mline_index:
      type: integer
      description: >-
        A number property containing the zero-based index of the m-line with which the candidate
        is associated, within the SDP of the media description, or null if no such associated
        exists. Additional information can be found in RTCIceCandidate.sdpMLineIndex.
    username_fragment:
      type: string
      description: >-
        A DOMString containing the username fragment (usually referred to in shorthand as "ufrag"
        or "ice-ufrag"). This fragment, along with the ICE password ("ice-pwd"), uniquely identifies
        a single ongoing ICE interaction (including for any communication with the STUN server).
        Additional information can be found in RTCIceCandidate.usernameFragment.
    ok:
      type: string
      description: response message with success from server
    error:
      type: string
      description: response message with error from server
    timeout:
      description: response timeout with failed attempt to send data
